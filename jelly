

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==7) then function v41(v43,v44,v45)local v46=v43[1];local v47=v43[2];local v48=v43[1273 -(226 + 1044) ];return function(...)local v78=v46;local v79=v47;local v80=v48;local v81=v39;local v82=1;local v83= -(4 -3);local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v92=0,v86 do if (v92>=v80) then v84[v92-v80 ]=v85[v92 + 1 ];else v88[v92]=v85[v92 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do local v93=0;while true do if (v93==0) then v90=v78[v82];v91=v90[118 -(32 + 85) ];v93=1;end if (v93==1) then if (v91<=54) then if (v91<=26) then if (v91<=12) then if (v91<=(5 + 0)) then if (v91<=2) then if (v91<=(0 + 0)) then local v135=0;local v136;local v137;while true do if (v135==0) then v136=v90[2];v137={};v135=1;end if (v135==1) then for v399=1, #v87 do local v400=0;local v401;while true do if (0==v400) then v401=v87[v399];for v534=957 -(892 + 65) , #v401 do local v535=0;local v536;local v537;local v538;while true do if (v535==0) then v536=v401[v534];v537=v536[1];v535=1;end if (1==v535) then v538=v536[2];if ((v537==v88) and (v538>=v136)) then v137[v538]=v537[v538];v536[1]=v137;end break;end end end break;end end end break;end end elseif (v91==1) then local v178=0;local v179;while true do if (v178==0) then v179=v90[2];v88[v179]=v88[v179]();break;end end elseif v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=3) then local v138=0;local v139;local v140;local v141;while true do if (v138==0) then v139=v79[v90[3]];v140=nil;v138=1;end if (v138==1) then v141={};v140=v18({},{[v7("\78\6\57\117\117\60\40","\27\17\89\80")]=function(v403,v404)local v405=v141[v404];return v405[2 -1 ][v405[2]];end,[v7("\241\74\116\79\217\124\116\78\203\109","\42\174\21\26")]=function(v406,v407,v408)local v409=v141[v407];v409[1][v409[2]]=v408;end});v138=2;end if (v138==2) then for v411=1,v90[4] do v82=v82 + 1 ;local v412=v78[v82];if (v412[1]==66) then v141[v411-(1 -0) ]={v88,v412[3]};else v141[v411-1 ]={v44,v412[3]};end v87[ #v87 + 1 ]=v141;end v88[v90[2]]=v41(v139,v140,v45);break;end end elseif (v91>4) then v88[v90[2]]=v88[v90[3]][v90[4]];else v88[v90[2]]=v90[3] + v88[v90[7 -3 ]] ;end elseif (v91<=8) then if (v91<=(356 -(87 + 263))) then local v142=0;local v143;while true do if (v142==0) then v143=v90[2];do return v88[v143](v21(v88,v143 + 1 ,v90[3]));end break;end end elseif (v91>7) then v88[v90[2]]= #v88[v90[3]];else v88[v90[182 -(67 + 113) ]]=v88[v90[3 + 0 ]]%v90[4] ;end elseif (v91<=10) then if (v91==(21 -12)) then local v185=0;local v186;local v187;local v188;while true do if (v185==1) then v188=0;for v480=v186,v90[4] do local v481=0;while true do if (v481==0) then v188=v188 + 1 ;v88[v480]=v187[v188];break;end end end break;end if (v185==0) then v186=v90[2];v187={v88[v186](v88[v186 + 1 ])};v185=1;end end else local v189=v90[2 + 0 ];local v190=v88[v189];local v191=v90[3];for v366=3 -2 ,v191 do v190[v366]=v88[v189 + v366 ];end end elseif (v91==11) then v88[v90[2]]=v44[v90[3]];else v88[v90[2]]();end elseif (v91<=19) then if (v91<=15) then if (v91<=13) then local v144=v90[954 -(802 + 150) ];local v145=v88[v144];local v146=v88[v144 + 2 ];if (v146>(0 -0)) then if (v145>v88[v144 + 1 ]) then v82=v90[3];else v88[v144 + 3 ]=v145;end elseif (v145<v88[v144 + 1 ]) then v82=v90[3];else v88[v144 + 3 ]=v145;end elseif (v91>14) then local v194=0;local v195;local v196;local v197;while true do if (v194==0) then v195=v90[2];v196=v88[v195];v194=1;end if (v194==1) then v197=v88[v195 + 2 ];if (v197>0) then if (v196>v88[v195 + 1 ]) then v82=v90[3];else v88[v195 + 3 ]=v196;end elseif (v196<v88[v195 + (1 -0) ]) then v82=v90[3 + 0 ];else v88[v195 + 3 ]=v196;end break;end end else local v198=0;local v199;local v200;local v201;while true do if (0==v198) then v199=v90[2];v200={v88[v199](v88[v199 + 1 ])};v198=1;end if (v198==1) then v201=997 -(915 + 82) ;for v482=v199,v90[4] do v201=v201 + 1 ;v88[v482]=v200[v201];end break;end end end elseif (v91<=17) then if (v91==16) then local v202=0;local v203;while true do if (v202==0) then v203=v90[2];v88[v203](v88[v203 + 1 ]);break;end end else v88[v90[2]][v88[v90[3]]]=v88[v90[4]];end elseif (v91==18) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;else local v207=v90[2];v88[v207](v88[v207 + 1 ]);end elseif (v91<=22) then if (v91<=20) then v88[v90[2]][v88[v90[3]]]=v88[v90[11 -7 ]];elseif (v91==21) then local v208=0;local v209;local v210;while true do if (v208==1) then v88[v209 + 1 ]=v210;v88[v209]=v210[v90[4]];break;end if (v208==0) then v209=v90[2 + 0 ];v210=v88[v90[3]];v208=1;end end else local v211=0;local v212;while true do if (v211==0) then v212=v90[2];v88[v212]=v88[v212]();break;end end end elseif (v91<=24) then if (v91>23) then do return;end else local v213=0;local v214;local v215;local v216;local v217;while true do if (0==v213) then v214=v90[2 -0 ];v215,v216=v81(v88[v214](v21(v88,v214 + 1 ,v83)));v213=1;end if (v213==1) then v83=(v216 + v214) -1 ;v217=0;v213=2;end if (v213==2) then for v485=v214,v83 do local v486=0;while true do if (v486==0) then v217=v217 + 1 ;v88[v485]=v215[v217];break;end end end break;end end end elseif (v91==25) then if (v88[v90[2]]~=v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else local v218=0;local v219;while true do if (v218==0) then v219=v90[2];do return v88[v219](v21(v88,v219 + 1 ,v90[3]));end break;end end end elseif (v91<=40) then if (v91<=33) then if (v91<=29) then if (v91<=27) then local v149=0;local v150;local v151;local v152;local v153;while true do if (v149==1) then v152=v90[4];v153=0;v149=2;end if (v149==0) then v150=v90[2];v151={v88[v150]()};v149=1;end if (2==v149) then for v419=v150,v152 do local v420=0;while true do if (v420==0) then v153=v153 + 1 ;v88[v419]=v151[v153];break;end end end break;end end elseif (v91>28) then v88[v90[1189 -(1069 + 118) ]]=v45[v90[3]];else v88[v90[2]]= #v88[v90[3]];end elseif (v91<=31) then if (v91>30) then local v223=v90[2];do return v21(v88,v223,v83);end else v88[v90[2]]=v41(v79[v90[6 -3 ]],nil,v45);end elseif (v91>32) then local v225=0;local v226;while true do if (v225==0) then v226=v90[2];v88[v226]=v88[v226](v88[v226 + 1 ]);break;end end else local v227=0;local v228;local v229;local v230;while true do if (v227==0) then v228=v90[2];v229=v88[v228 + 2 ];v227=1;end if (v227==1) then v230=v88[v228] + v229 ;v88[v228]=v230;v227=2;end if (2==v227) then if (v229>0) then if (v230<=v88[v228 + 1 ]) then v82=v90[3];v88[v228 + (6 -3) ]=v230;end elseif (v230>=v88[v228 + 1 ]) then v82=v90[3];v88[v228 + 3 ]=v230;end break;end end end elseif (v91<=36) then if (v91<=34) then if  not v88[v90[1 + 1 ]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>35) then local v232=0;local v233;while true do if (0==v232) then v233=v90[2];v83=(v233 + v89) -(1 -0) ;v232=1;end if (v232==1) then for v487=v233,v83 do local v488=v84[v487-v233 ];v88[v487]=v488;end break;end end else v88[v90[2 + 0 ]]=v88[v90[3]];end elseif (v91<=38) then if (v91==37) then local v236=v90[2];v88[v236](v21(v88,v236 + 1 ,v83));else local v237=0;local v238;local v239;local v240;local v241;while true do if (v237==1) then v83=(v240 + v238) -1 ;v241=0;v237=2;end if (v237==2) then for v490=v238,v83 do local v491=0;while true do if (v491==0) then v241=v241 + 1 ;v88[v490]=v239[v241];break;end end end break;end if (0==v237) then v238=v90[2];v239,v240=v81(v88[v238]());v237=1;end end end elseif (v91==39) then v88[v90[2]][v90[3]]=v88[v90[795 -(368 + 423) ]];else v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;end elseif (v91<=47) then if (v91<=43) then if (v91<=(128 -87)) then v88[v90[20 -(10 + 8) ]]=v88[v90[3]][v90[4]];elseif (v91==42) then local v245=0;local v246;while true do if (v245==0) then v246=v90[2];v88[v246](v21(v88,v246 + 1 ,v83));break;end end else do return v88[v90[2]]();end end elseif (v91<=45) then if (v91==(169 -125)) then local v247=0;local v248;local v249;local v250;while true do if (1==v247) then v250={};v249=v18({},{[v7("\47\8\168\64\20\50\185","\46\112\87\193")]=function(v492,v493)local v494=v250[v493];return v494[1][v494[2]];end,[v7("\28\148\122\186\168\76\79\189\38\179","\217\67\203\20\223\223\37\33")]=function(v495,v496,v497)local v498=v250[v496];v498[1][v498[444 -(416 + 26) ]]=v497;end});v247=2;end if (v247==2) then for v500=1,v90[4] do v82=v82 + 1 ;local v501=v78[v82];if (v501[1]==66) then v250[v500-1 ]={v88,v501[3]};else v250[v500-1 ]={v44,v501[3]};end v87[ #v87 + 1 ]=v250;end v88[v90[2]]=v41(v248,v249,v45);break;end if (0==v247) then v248=v79[v90[3]];v249=nil;v247=1;end end else local v251=0;local v252;local v253;while true do if (v251==1) then for v503=1 -0 , #v87 do local v504=0;local v505;while true do if (v504==0) then v505=v87[v503];for v563=0, #v505 do local v564=v505[v563];local v565=v564[1];local v566=v564[2];if ((v565==v88) and (v566>=v252)) then local v570=0;while true do if (v570==0) then v253[v566]=v565[v566];v564[1]=v253;break;end end end end break;end end end break;end if (0==v251) then v252=v90[2];v253={};v251=1;end end end elseif (v91>46) then v88[v90[2]][v90[3]]=v88[v90[4]];else local v256=0;local v257;local v258;local v259;local v260;while true do if (v256==0) then v257=v90[2];v258,v259=v81(v88[v257](v21(v88,v257 + 1 ,v83)));v256=1;end if (v256==1) then v83=(v259 + v257) -1 ;v260=0;v256=2;end if (v256==2) then for v506=v257,v83 do local v507=0;while true do if (v507==0) then v260=v260 + 1 ;v88[v506]=v258[v260];break;end end end break;end end end elseif (v91<=(488 -(145 + 293))) then if (v91<=48) then if (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>49) then local v262=v90[2];local v263={v88[v262](v21(v88,v262 + 1 ,v90[3]))};local v264=0;for v371=v262,v90[4] do local v372=0;while true do if (v372==0) then v264=v264 + 1 ;v88[v371]=v263[v264];break;end end end else v88[v90[432 -(44 + 386) ]][v90[3]]=v90[4];end elseif (v91<=52) then if (v91==51) then if (v88[v90[2]]~=v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]][v90[3]]=v90[4];end elseif (v91==(1539 -(998 + 488))) then do return;end else local v269=0;local v270;local v271;local v272;local v273;while true do if (v269==0) then v270=v90[2];v271,v272=v81(v88[v270](v21(v88,v270 + 1 ,v90[3])));v269=1;end if (v269==1) then v83=(v272 + v270) -1 ;v273=0;v269=2;end if (v269==2) then for v510=v270,v83 do local v511=0;while true do if (v511==0) then v273=v273 + 1 ;v88[v510]=v271[v273];break;end end end break;end end end elseif (v91<=82) then if (v91<=68) then if (v91<=61) then if (v91<=57) then if (v91<=55) then v88[v90[2]]=v45[v90[3]];elseif (v91>56) then local v274=v90[2];local v275=v88[v274];for v373=v274 + 1 + 0 ,v83 do v15(v275,v88[v373]);end else v88[v90[2]]=v90[3]~=0 ;end elseif (v91<=59) then if (v91==58) then v44[v90[3]]=v88[v90[2]];elseif (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>60) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 + 0 ;else v82=v90[775 -(201 + 571) ];end else v88[v90[2]]=v90[3] + v88[v90[4]] ;end elseif (v91<=64) then if (v91<=62) then local v158=0;local v159;local v160;while true do if (v158==0) then v159=v90[2];v160=v88[v90[3]];v158=1;end if (v158==1) then v88[v159 + 1 ]=v160;v88[v159]=v160[v90[4]];break;end end elseif (v91==63) then local v280=v90[2];local v281,v282=v81(v88[v280](v88[v280 + 1 ]));v83=(v282 + v280) -(1139 -(116 + 1022)) ;local v283=0;for v379=v280,v83 do local v380=0;while true do if (v380==0) then v283=v283 + 1 ;v88[v379]=v281[v283];break;end end end else v82=v90[12 -9 ];end elseif (v91<=66) then if (v91>(39 + 26)) then v88[v90[2]]=v88[v90[3]];else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91==(244 -177)) then local v288=0;local v289;while true do if (v288==0) then v289=v90[2];v88[v289](v21(v88,v289 + 1 ,v90[3]));break;end end else v88[v90[2]]=v41(v79[v90[3]],nil,v45);end elseif (v91<=75) then if (v91<=71) then if (v91<=69) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91==70) then v88[v90[2]][v88[v90[3]]]=v90[14 -10 ];else local v294=0;local v295;while true do if (v294==0) then v295=v90[2];do return v88[v295](v21(v88,v295 + 1 ,v83));end break;end end end elseif (v91<=73) then if (v91>72) then local v296=0;local v297;local v298;while true do if (v296==0) then v297=v90[2];v298=v88[v297];v296=1;end if (1==v296) then for v514=v297 + 1 ,v83 do v15(v298,v88[v514]);end break;end end else local v299=0;local v300;while true do if (v299==0) then v300=v90[2];v88[v300]=v88[v300](v21(v88,v300 + 1 ,v83));break;end end end elseif (v91==74) then local v301=0;local v302;local v303;while true do if (v301==1) then for v515=v302 + 1 ,v90[3] do v15(v303,v88[v515]);end break;end if (v301==0) then v302=v90[2];v303=v88[v302];v301=1;end end elseif (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=78) then if (v91<=76) then local v161=0;local v162;while true do if (v161==0) then v162=v90[2];do return v88[v162](v21(v88,v162 + 1 ,v83));end break;end end elseif (v91==77) then if v88[v90[861 -(814 + 45) ]] then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v90[3];end elseif (v91<=80) then if (v91>79) then v82=v90[3];else local v307=0;local v308;while true do if (v307==0) then v308=v90[2];do return v21(v88,v308,v83);end break;end end end elseif (v91>81) then local v309=v90[2];v88[v309]=v88[v309](v21(v88,v309 + 1 ,v90[3]));else v88[v90[4 -2 ]]=v44[v90[3]];end elseif (v91<=(6 + 90)) then if (v91<=89) then if (v91<=(31 + 54)) then if (v91<=83) then local v163=v90[2];local v164=v90[4];local v165=v163 + 2 ;local v166={v88[v163](v88[v163 + 1 ],v88[v165])};for v175=1,v164 do v88[v165 + v175 ]=v166[v175];end local v167=v166[1];if v167 then local v313=0;while true do if (v313==0) then v88[v165]=v167;v82=v90[3];break;end end else v82=v82 + 1 ;end elseif (v91==84) then local v314=v90[2];local v315=v88[v314];local v316=v90[3];for v382=1,v316 do v315[v382]=v88[v314 + v382 ];end else local v317=0;local v318;local v319;local v320;while true do if (v317==0) then v318=v90[2];v319={v88[v318](v21(v88,v318 + 1 ,v90[888 -(261 + 624) ]))};v317=1;end if (1==v317) then v320=0;for v516=v318,v90[4] do v320=v320 + 1 ;v88[v516]=v319[v320];end break;end end end elseif (v91<=87) then if (v91==86) then local v321=v90[3 -1 ];local v322=v90[4];local v323=v321 + 2 ;local v324={v88[v321](v88[v321 + 1 ],v88[v323])};for v385=1,v322 do v88[v323 + v385 ]=v324[v385];end local v325=v324[1];if v325 then local v426=0;while true do if (v426==0) then v88[v323]=v325;v82=v90[3];break;end end else v82=v82 + 1 ;end else v44[v90[3]]=v88[v90[2]];end elseif (v91>(1168 -(1020 + 60))) then local v328=v90[2];local v329,v330=v81(v88[v328]());v83=(v330 + v328) -1 ;local v331=0;for v388=v328,v83 do v331=v331 + 1 ;v88[v388]=v329[v331];end else local v332=v90[2];local v333={v88[v332]()};local v334=v90[4];local v335=0;for v391=v332,v334 do local v392=0;while true do if (v392==0) then v335=v335 + (1424 -(630 + 793)) ;v88[v391]=v333[v335];break;end end end end elseif (v91<=92) then if (v91<=90) then v88[v90[2]]=v90[3];elseif (v91>91) then v88[v90[2]]();else do return v88[v90[2]]();end end elseif (v91<=94) then if (v91>93) then v88[v90[2]]=v90[3]~=(0 -0) ;else local v337=v90[2];v88[v337](v21(v88,v337 + 1 ,v90[3]));end elseif (v91==95) then local v338=0;local v339;local v340;local v341;local v342;while true do if (1==v338) then v83=(v341 + v339) -(4 -3) ;v342=0 + 0 ;v338=2;end if (v338==0) then v339=v90[2];v340,v341=v81(v88[v339](v21(v88,v339 + 1 ,v90[3])));v338=1;end if (v338==2) then for v521=v339,v83 do v342=v342 + 1 ;v88[v521]=v340[v342];end break;end end else local v343=v90[2];v88[v343]=v88[v343](v88[v343 + 1 ]);end elseif (v91<=103) then if (v91<=99) then if (v91<=97) then v88[v90[2]]={};elseif (v91>(337 -239)) then for v393=v90[1749 -(760 + 987) ],v90[1916 -(1789 + 124) ] do v88[v393]=nil;end elseif (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=101) then if (v91>100) then local v345=v90[2];v88[v345]=v88[v345](v21(v88,v345 + 1 ,v90[3]));else v88[v90[768 -(745 + 21) ]]=v88[v90[3]] + v90[2 + 2 ] ;end elseif (v91==102) then local v348=v90[2];local v349,v350=v81(v88[v348](v88[v348 + 1 ]));v83=(v350 + v348) -1 ;local v351=0;for v395=v348,v83 do local v396=0;while true do if (v396==0) then v351=v351 + (2 -1) ;v88[v395]=v349[v351];break;end end end else local v352=0;local v353;while true do if (v352==0) then v353=v90[2];v88[v353]=v88[v353](v21(v88,v353 + 1 ,v83));break;end end end elseif (v91<=106) then if (v91<=(407 -303)) then v88[v90[2]][v88[v90[1 + 2 ]]]=v90[4];elseif (v91==(83 + 22)) then v88[v90[2]]={};else for v397=v90[2],v90[3] do v88[v397]=nil;end end elseif (v91<=108) then if (v91==107) then if (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else local v355=0;local v356;local v357;local v358;while true do if (1==v355) then v358=v88[v356] + v357 ;v88[v356]=v358;v355=2;end if (0==v355) then v356=v90[2];v357=v88[v356 + 2 ];v355=1;end if (v355==2) then if (v357>(1055 -(87 + 968))) then if (v358<=v88[v356 + 1 ]) then local v560=0;while true do if (v560==0) then v82=v90[3];v88[v356 + 3 ]=v358;break;end end end elseif (v358>=v88[v356 + 1 ]) then v82=v90[3];v88[v356 + 3 ]=v358;end break;end end end elseif (v91>109) then local v359=0;local v360;while true do if (v359==1) then for v526=v360,v83 do local v527=v84[v526-v360 ];v88[v526]=v527;end break;end if (v359==0) then v360=v90[2];v83=(v360 + v89) -1 ;v359=1;end end else v88[v90[8 -6 ]]=v88[v90[3]]%v90[4] ;end v82=v82 + 1 ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==4) then function v36()local v49=v35();local v50=v35();local v51=1;local v52=(v32(v50,1,20) * (2^32)) + v49 ;local v53=v32(v50,952 -(857 + 74) ,31);local v54=((v32(v50,32)==1) and  -1) or 1 ;if (v53==0) then if (v52==(568 -(367 + 201))) then return v54 * 0 ;else v53=1;v51=927 -(214 + 713) ;end elseif (v53==2047) then return ((v52==0) and (v54 * (1/0))) or (v54 * NaN) ;end return v16(v54,v53-1023 ) * (v51 + (v52/(2^52))) ;end v37=nil;function v37(v55)local v56=0;local v57;local v58;while true do if (1==v56) then v57=v11(v27,v30,(v30 + v55) -1 );v30=v30 + v55 ;v56=2;end if (v56==0) then v57=nil;if  not v55 then v55=v35();if (v55==0) then return "";end end v56=1;end if (v56==2) then v58={};for v104=1, #v57 do v58[v104]=v10(v9(v11(v57,v104,v104)));end v56=3;end if (v56==3) then return v14(v58);end end end v29=5;end if (v29==1) then v32=nil;function v32(v59,v60,v61)if v61 then local v94=0;local v95;while true do if (v94==0) then v95=(v59/(2^(v60-1)))%(2^(((v61-1) -(v60-(2 -1))) + 1)) ;return v95-(v95%1) ;end end else local v96=2^(v60-1) ;return (((v59%(v96 + v96))>=v96) and 1) or 0 ;end end v33=nil;v29=2;end if (v29==2) then function v33()local v62=v9(v27,v30,v30);v30=v30 + 1 ;return v62;end v34=nil;function v34()local v63,v64=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v64 * (493 -237)) + v63 ;end v29=3;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (3==v29) then v35=nil;function v35()local v65=0;local v66;local v67;local v68;local v69;while true do if (v65==0) then v66,v67,v68,v69=v9(v27,v30,v30 + (7 -4) );v30=v30 + (623 -(555 + 64)) ;v65=1;end if (v65==1) then return (v69 * 16777216) + (v68 * 65536) + (v67 * 256) + v66 ;end end end v36=nil;v29=4;end if (v29==6) then v40=nil;function v40()local v70=0;local v71;local v72;local v73;local v74;local v75;local v76;while true do if (v70==2) then for v106=1,v35() do local v107=0;local v108;while true do if (v107==0) then v108=v33();if (v32(v108,1,878 -(282 + 595) )==0) then local v120=v32(v108,2,1640 -(1523 + 114) );local v121=v32(v108,4,6);local v122={v34(),v34(),nil,nil};if (v120==0) then local v124=0;while true do if (v124==0) then v122[3]=v34();v122[4]=v34();break;end end elseif (v120==1) then v122[3]=v35();elseif (v120==2) then v122[3 + 0 ]=v35() -(2^16) ;elseif (v120==(3 -0)) then v122[3]=v35() -(2^16) ;v122[4]=v34();end if (v32(v121,1,1)==1) then v122[2]=v76[v122[2]];end if (v32(v121,2,2)==1) then v122[1068 -(68 + 997) ]=v76[v122[3]];end if (v32(v121,3,3)==1) then v122[4]=v76[v122[4]];end v71[v106]=v122;end break;end end end for v109=1,v35() do v72[v109-1 ]=v40();end return v74;end if (0==v70) then v71={};v72={};v73={};v74={v71,v72,nil,v73};v70=1;end if (1==v70) then v75=v35();v76={};for v111=1,v75 do local v112=0;local v113;local v114;while true do if (v112==1) then if (v113==(1 + 0)) then v114=v33()~=0 ;elseif (v113==2) then v114=v36();elseif (v113==3) then v114=v37();end v76[v111]=v114;break;end if (v112==0) then v113=v33();v114=nil;v112=1;end end end v74[3]=v33();v70=2;end end end v41=nil;v29=7;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\195\230","\218\237\200\36\176\214\213"),function(v77)if (v9(v77,2)==79) then v31=v8(v11(v77,1,2 -1 ));return "";else local v97=0;local v98;while true do if (v97==0) then v98=v10(v8(v77,16));if v31 then local v118=0;local v119;while true do if (v118==1) then return v119;end if (0==v118) then v119=v13(v98,v31);v31=nil;v118=1;end end else return v98;end break;end end end end);v29=1;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.16) ~  Much Love, Ferib 

]]--

